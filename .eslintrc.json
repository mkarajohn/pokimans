{
  "extends": ["next/core-web-vitals", "prettier", "plugin:@typescript-eslint/recommended"],
  "plugins": ["@typescript-eslint"],
  "rules": {
    /* React rules */
    "react/no-direct-mutation-state": "error",
    "react/no-unused-prop-types": "warn",
    "react/self-closing-comp": [
      "warn",
      {
        "component": true,
        "html": true
      }
    ],
    "react/button-has-type": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",

    /* JSX rules */
    "react/jsx-key": "error",
    "react/jsx-curly-brace-presence": ["error", "never"],

    /* eslint basic rules */
    "no-empty-function": "off",
    "no-unused-expressions": "off",
    "no-unused-vars": "off",
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "function",
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "function"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      }
    ],
    "no-debugger": "warn",
    "no-console": "warn"
  },
  "overrides": [
    // TS only rules
    {
      "files": ["**/*.ts?(x)"],
      "rules": {
        "@typescript-eslint/no-empty-function": "warn",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "args": "all",
            "argsIgnorePattern": "^__",
            "varsIgnorePattern": "^__|React"
          }
        ],
        "@typescript-eslint/ban-ts-comment": "warn",
        //        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "typeLike",
            "format": ["PascalCase", "UPPER_CASE"]
          }
        ]
      }
    }
  ]
}
